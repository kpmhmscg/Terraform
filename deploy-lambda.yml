AWSTemplateFormatVersion: '2010-09-09'
Description: Template for Lambda Sample.
Parameters:
  EnvName:
    Type: String
    Description: Name of an environment. 'dev', 'test', 'prod' and any name.

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: lambda-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Path: /
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName:
        Fn::Sub: addObjectTag-${EnvName}
      Description: Lambda function to tag objects on write
      Runtime: "python3.7"
      Code:
        ZipFile: |
          import json
          import urllib.parse
          import boto3
          import datetime

          s3 = boto3.client('s3')
          now = datetime.datetime.now()
          tagValue = "test"
          tagName = "env"



          def lambda_handler(event, context):
            bucket = event['Records'][0]['s3']['bucket']['name']
            key = urllib.parse.unquote_plus(event['Records'][0]['s3']['object']['key'], encoding='utf-8')

            try:
                response = s3.put_object_tagging(
                    Bucket = bucket,
                    Key = key,
                    Tagging={
                        'TagSet': [
                            {
                                'Key': tagName,
                                'Value': tagValue
                            },
                        ]
                    }
                )
            except Exception as e:
              print(e)
              raise e

      Handler: index.lambda_handler
      MemorySize: 128
      Timeout: 10
      Role:
        Fn::GetAtt:
          - LambdaRole
          - Arn
      Environment:
        Variables:
          ENV:
            Fn::Sub: ${EnvName}